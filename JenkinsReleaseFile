#!groovy

pipeline {
//  agent any
  agent { node { label 'SandboxNode' }}

  tools {
//    maven 'Maven 3.6.0'
    jdk 'jdk1.8.0_u144'
  }

  options {
    disableConcurrentBuilds()
    buildDiscarder(logRotator( daysToKeepStr: '', numToKeepStr: '1'))
  }

  environment {
    MAVEN_OPTS ="-Dmaven.test.failure.ignore=false"
  }

  stages{

    stage('clean') {
      steps{
        deleteDir()
      }
    }
    stage('Checkout master branch') {
      steps{
        dir("masterbranch"){
//          git branch: "master", credentialsId: 'mycred', url: 'https://github.com/thomasfourest/helloworldmavenpipeline.git'
          git branch: "master", url: 'https://github.com/thomasfourest/helloworldmavenpipeline.git'
        }
      }
    }

    stage("release and deploy"){
      steps{
        dir("masterbranch"){
	  echo "JAVA_HOME = ${JAVA_HOME}"
	  withMaven(maven: 'maven 3.6.0', mavenOpts: "$MAVEN_OPTS", mavenSettingsConfig: 'maven.settings.xml', publisherStrategy: 'EXPLICIT') {
            echo "M2_HOME = ${M2_HOME}"
            echo "PATH = ${PATH}"
/*
            withCredentials([usernamePassword(credentialsId: 'mycred', passwordVariable: 'PWD', usernameVariable: 'USERNAME')]) {
              sh "mvn -Dresume=false -Dusername=$USERNAME -Dpassword=$PWD release:prepare release:perform"
	    }
*/
	    sh "mvn -Dresume=false -Dusername=git release:prepare release:perform -X -e"
	  }  
        }
      }
    }
  }

  post {
    always {
      junit allowEmptyResults: true, testResults: '**/target/surefire-reports/TEST*.xml'
      echo 'clean up our workspace'
      script {
        def wrkspcDir = pwd()
        dir("${wrkspcDir}@script") {
          println "delete ${wrkspcDir}@script"
          deleteDir()
        }
        dir("${wrkspcDir}@tmp") {
          println "delete ${wrkspcDir}@tmp"
          deleteDir()
        }
      }
      cleanWs cleanWhenFailure: true, cleanWhenNotBuilt: true, cleanWhenUnstable: true, notFailBuild: true
    }
  }

}
